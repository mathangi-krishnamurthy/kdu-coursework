<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.kdu.smarthome.SmartHomeApplicationTests" time="8.489" tests="26" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/hp/Downloads/assessmenttwo/target/test-classes:/home/hp/Downloads/assessmenttwo/target/classes:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.2/spring-boot-starter-data-jpa-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.2/spring-boot-starter-aop-3.2.2.jar:/home/hp/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.2/spring-boot-starter-jdbc-3.2.2.jar:/home/hp/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/hp/.m2/repository/org/springframework/spring-jdbc/6.1.3/spring-jdbc-6.1.3.jar:/home/hp/.m2/repository/org/hibernate/orm/hibernate-core/6.4.1.Final/hibernate-core-6.4.1.Final.jar:/home/hp/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/hp/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/hp/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/hp/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/hp/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/hp/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/home/hp/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/hp/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/hp/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/hp/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/hp/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/hp/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/hp/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/hp/.m2/repository/org/springframework/data/spring-data-jpa/3.2.2/spring-data-jpa-3.2.2.jar:/home/hp/.m2/repository/org/springframework/data/spring-data-commons/3.2.2/spring-data-commons-3.2.2.jar:/home/hp/.m2/repository/org/springframework/spring-orm/6.1.3/spring-orm-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-context/6.1.3/spring-context-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-tx/6.1.3/spring-tx-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-beans/6.1.3/spring-beans-6.1.3.jar:/home/hp/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/hp/.m2/repository/org/slf4j/slf4j-api/2.0.11/slf4j-api-2.0.11.jar:/home/hp/.m2/repository/org/springframework/spring-aspects/6.1.3/spring-aspects-6.1.3.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.2/spring-boot-starter-web-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.2/spring-boot-starter-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot/3.2.2/spring-boot-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.2/spring-boot-autoconfigure-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.2/spring-boot-starter-logging-3.2.2.jar:/home/hp/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/home/hp/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/home/hp/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/hp/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/hp/.m2/repository/org/slf4j/jul-to-slf4j/2.0.11/jul-to-slf4j-2.0.11.jar:/home/hp/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.2/spring-boot-starter-json-3.2.2.jar:/home/hp/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.2/spring-boot-starter-tomcat-3.2.2.jar:/home/hp/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar:/home/hp/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar:/home/hp/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar:/home/hp/.m2/repository/org/springframework/spring-web/6.1.3/spring-web-6.1.3.jar:/home/hp/.m2/repository/io/micrometer/micrometer-observation/1.12.2/micrometer-observation-1.12.2.jar:/home/hp/.m2/repository/io/micrometer/micrometer-commons/1.12.2/micrometer-commons-1.12.2.jar:/home/hp/.m2/repository/org/springframework/spring-webmvc/6.1.3/spring-webmvc-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-expression/6.1.3/spring-expression-6.1.3.jar:/home/hp/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/home/hp/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/hp/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/hp/.m2/repository/io/jsonwebtoken/jjwt-api/0.12.3/jjwt-api-0.12.3.jar:/home/hp/.m2/repository/io/jsonwebtoken/jjwt-impl/0.12.3/jjwt-impl-0.12.3.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.2/spring-boot-starter-security-3.2.2.jar:/home/hp/.m2/repository/org/springframework/spring-aop/6.1.3/spring-aop-6.1.3.jar:/home/hp/.m2/repository/org/springframework/security/spring-security-config/6.2.1/spring-security-config-6.2.1.jar:/home/hp/.m2/repository/org/springframework/security/spring-security-core/6.2.1/spring-security-core-6.2.1.jar:/home/hp/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/home/hp/.m2/repository/org/springframework/security/spring-security-web/6.2.1/spring-security-web-6.2.1.jar:/home/hp/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/hp/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/hp/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.12.3/jjwt-jackson-0.12.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/hp/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.2/spring-boot-starter-test-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-test/3.2.2/spring-boot-test-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.2/spring-boot-test-autoconfigure-3.2.2.jar:/home/hp/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/hp/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/hp/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/hp/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/hp/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/hp/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/hp/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/hp/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/home/hp/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/hp/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/hp/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/hp/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/hp/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/hp/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/hp/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/hp/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/hp/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/hp/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/hp/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/home/hp/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/hp/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/hp/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/hp/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/hp/.m2/repository/org/springframework/spring-core/6.1.3/spring-core-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-jcl/6.1.3/spring-jcl-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-test/6.1.3/spring-test-6.1.3.jar:/home/hp/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="Unknown"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-openjdk-amd64/lib"/>
    <property name="sun.java.command" value="/home/hp/Downloads/assessmenttwo/target/surefire/surefirebooter-20240204120603027_3.jar /home/hp/Downloads/assessmenttwo/target/surefire 2024-02-04T12-06-02_918-jvmRun1 surefire-20240204120603027_1tmp surefire_0-20240204120603027_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/hp/Downloads/assessmenttwo/target/test-classes:/home/hp/Downloads/assessmenttwo/target/classes:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.2/spring-boot-starter-data-jpa-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.2/spring-boot-starter-aop-3.2.2.jar:/home/hp/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.2/spring-boot-starter-jdbc-3.2.2.jar:/home/hp/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/hp/.m2/repository/org/springframework/spring-jdbc/6.1.3/spring-jdbc-6.1.3.jar:/home/hp/.m2/repository/org/hibernate/orm/hibernate-core/6.4.1.Final/hibernate-core-6.4.1.Final.jar:/home/hp/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/hp/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/hp/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/hp/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/hp/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/hp/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/home/hp/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/home/hp/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/home/hp/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/hp/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/home/hp/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/hp/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/hp/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/hp/.m2/repository/org/springframework/data/spring-data-jpa/3.2.2/spring-data-jpa-3.2.2.jar:/home/hp/.m2/repository/org/springframework/data/spring-data-commons/3.2.2/spring-data-commons-3.2.2.jar:/home/hp/.m2/repository/org/springframework/spring-orm/6.1.3/spring-orm-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-context/6.1.3/spring-context-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-tx/6.1.3/spring-tx-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-beans/6.1.3/spring-beans-6.1.3.jar:/home/hp/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/hp/.m2/repository/org/slf4j/slf4j-api/2.0.11/slf4j-api-2.0.11.jar:/home/hp/.m2/repository/org/springframework/spring-aspects/6.1.3/spring-aspects-6.1.3.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.2/spring-boot-starter-web-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.2/spring-boot-starter-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot/3.2.2/spring-boot-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.2/spring-boot-autoconfigure-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.2/spring-boot-starter-logging-3.2.2.jar:/home/hp/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/home/hp/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/home/hp/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/hp/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/hp/.m2/repository/org/slf4j/jul-to-slf4j/2.0.11/jul-to-slf4j-2.0.11.jar:/home/hp/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.2/spring-boot-starter-json-3.2.2.jar:/home/hp/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.2/spring-boot-starter-tomcat-3.2.2.jar:/home/hp/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar:/home/hp/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar:/home/hp/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar:/home/hp/.m2/repository/org/springframework/spring-web/6.1.3/spring-web-6.1.3.jar:/home/hp/.m2/repository/io/micrometer/micrometer-observation/1.12.2/micrometer-observation-1.12.2.jar:/home/hp/.m2/repository/io/micrometer/micrometer-commons/1.12.2/micrometer-commons-1.12.2.jar:/home/hp/.m2/repository/org/springframework/spring-webmvc/6.1.3/spring-webmvc-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-expression/6.1.3/spring-expression-6.1.3.jar:/home/hp/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/home/hp/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/hp/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/hp/.m2/repository/io/jsonwebtoken/jjwt-api/0.12.3/jjwt-api-0.12.3.jar:/home/hp/.m2/repository/io/jsonwebtoken/jjwt-impl/0.12.3/jjwt-impl-0.12.3.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.2/spring-boot-starter-security-3.2.2.jar:/home/hp/.m2/repository/org/springframework/spring-aop/6.1.3/spring-aop-6.1.3.jar:/home/hp/.m2/repository/org/springframework/security/spring-security-config/6.2.1/spring-security-config-6.2.1.jar:/home/hp/.m2/repository/org/springframework/security/spring-security-core/6.2.1/spring-security-core-6.2.1.jar:/home/hp/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/home/hp/.m2/repository/org/springframework/security/spring-security-web/6.2.1/spring-security-web-6.2.1.jar:/home/hp/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/hp/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/hp/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.12.3/jjwt-jackson-0.12.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/hp/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/hp/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.2/spring-boot-starter-test-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-test/3.2.2/spring-boot-test-3.2.2.jar:/home/hp/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.2/spring-boot-test-autoconfigure-3.2.2.jar:/home/hp/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/hp/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/home/hp/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/hp/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/home/hp/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/home/hp/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/hp/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/hp/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/home/hp/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/hp/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/home/hp/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/home/hp/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/hp/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/home/hp/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/hp/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/home/hp/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/home/hp/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/home/hp/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/hp/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/home/hp/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/hp/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/hp/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/hp/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/hp/.m2/repository/org/springframework/spring-core/6.1.3/spring-core-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-jcl/6.1.3/spring-jcl-6.1.3.jar:/home/hp/.m2/repository/org/springframework/spring-test/6.1.3/spring-test-6.1.3.jar:/home/hp/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/hp"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-10-17"/>
    <property name="java.home" value="/usr/lib/jvm/java-17-openjdk-amd64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/hp/Downloads/assessmenttwo"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/hp/Downloads/assessmenttwo/target/surefire/surefirebooter-20240204120603027_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.9+9-Ubuntu-122.04"/>
    <property name="user.name" value="hp"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.5.0-15-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/hp/.m2/repository"/>
    <property name="java.vendor.url.bug" value="Unknown"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.9"/>
    <property name="user.dir" value="/home/hp/Downloads/assessmenttwo"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="133895"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="java.vm.version" value="17.0.9+9-Ubuntu-122.04"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="runAuthTests" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="1.232">
    <system-out><![CDATA[12:06:04.010 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.kdu.smarthome.SmartHomeApplicationTests]: SmartHomeApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
12:06:04.172 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.kdu.smarthome.AssessmentApplication for test class com.kdu.smarthome.SmartHomeApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2024-02-04T12:06:04.605+05:30  INFO 133895 --- [           main] c.k.smarthome.SmartHomeApplicationTests  : Starting SmartHomeApplicationTests using Java 17.0.9 with PID 133895 (started by hp in /home/hp/Downloads/assessmenttwo)
2024-02-04T12:06:04.606+05:30  INFO 133895 --- [           main] c.k.smarthome.SmartHomeApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-02-04T12:06:05.233+05:30  INFO 133895 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-02-04T12:06:05.311+05:30  INFO 133895 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 7 JPA repository interfaces.
2024-02-04T12:06:06.202+05:30  INFO 133895 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-02-04T12:06:06.275+05:30  INFO 133895 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-02-04T12:06:06.323+05:30  INFO 133895 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-02-04T12:06:06.631+05:30  INFO 133895 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-02-04T12:06:06.659+05:30  INFO 133895 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-02-04T12:06:06.872+05:30  INFO 133895 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-02-04T12:06:06.873+05:30  INFO 133895 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-02-04T12:06:06.897+05:30  WARN 133895 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-02-04T12:06:08.000+05:30  INFO 133895 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: create table added_devices (id bigint generated by default as identity, kickston_id integer, house_id integer, house_user_id integer, room_id integer, primary key (id))
Hibernate: create table device (id integer generated by default as identity, device_password varchar(255), device_username varchar(255), kickston_id varchar(255), manufacture_date_time timestamp(6), manufacture_factory_place varchar(255), primary key (id))
Hibernate: create table house (id integer not null, address varchar(255), houseName varchar(255), primary key (id))
Hibernate: create table house_user (id integer not null, house_role varchar(255) check (house_role in ('ADMIN','BASIC')), house_id integer, username integer, primary key (id))
Hibernate: create table registered_device (id bigint generated by default as identity, device_id integer, user_id integer, primary key (id))
Hibernate: create table rooms (id integer not null, roomName varchar(255), house_id integer, primary key (id))
Hibernate: create table users (id integer not null, email varchar(255), firstName varchar(255) not null, lastName varchar(255) not null, name varchar(255), password varchar(255) not null, role varchar(255), username varchar(255) not null, primary key (id))
Hibernate: alter table if exists added_devices drop constraint if exists UK_r5kgelfpd6wu2s9ijwasusyc5
Hibernate: alter table if exists added_devices add constraint UK_r5kgelfpd6wu2s9ijwasusyc5 unique (kickston_id)
Hibernate: alter table if exists device drop constraint if exists UK_fga9oh9gw5c38n43v7euup1j5
Hibernate: alter table if exists device add constraint UK_fga9oh9gw5c38n43v7euup1j5 unique (kickston_id)
Hibernate: create index idx_house_id on house_user (house_id)
Hibernate: alter table if exists registered_device drop constraint if exists UK_bxfjyo6085itqoii8sek3uonm
Hibernate: alter table if exists registered_device add constraint UK_bxfjyo6085itqoii8sek3uonm unique (device_id)
Hibernate: alter table if exists users drop constraint if exists UK_r43af9ap4edm43mmtq01oddj6
Hibernate: alter table if exists users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
Hibernate: create sequence house_SEQ start with 1 increment by 50
Hibernate: create sequence house_user_SEQ start with 1 increment by 50
Hibernate: create sequence rooms_SEQ start with 1 increment by 50
Hibernate: create sequence users_SEQ start with 1 increment by 50
Hibernate: alter table if exists added_devices add constraint FKmylvfcoh7j6dxso9169h9eyp5 foreign key (kickston_id) references device
Hibernate: alter table if exists added_devices add constraint FKefkkflsr3g65qsphxxiv2jp2g foreign key (house_id) references house
Hibernate: alter table if exists added_devices add constraint FKq6f3gkytr5pkkds20mlxb7j0u foreign key (house_user_id) references house_user
Hibernate: alter table if exists added_devices add constraint FK57iefho7ecsvwi4dun7x4rb52 foreign key (room_id) references rooms
Hibernate: alter table if exists house_user add constraint FKstl7704pnao0a468fw272lq3m foreign key (house_id) references house
Hibernate: alter table if exists house_user add constraint FK7bbem9b75ixqiugf6prn5qvc4 foreign key (username) references users
Hibernate: alter table if exists registered_device add constraint FKu6skkd710qms0gargw27t72x foreign key (device_id) references device
Hibernate: alter table if exists registered_device add constraint FKbqncbestk03gq6tv4ucdg47pd foreign key (user_id) references users
Hibernate: alter table if exists rooms add constraint FKbegtit1jc617six1yhcx31hdm foreign key (house_id) references house
2024-02-04T12:06:08.072+05:30  INFO 133895 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-02-04T12:06:08.542+05:30  INFO 133895 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-02-04T12:06:09.126+05:30  WARN 133895 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-02-04T12:06:09.488+05:30  INFO 133895 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ca6e265, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@582b6362, org.springframework.security.web.context.SecurityContextHolderFilter@6230a15a, org.springframework.security.web.header.HeaderWriterFilter@15c0a8ad, org.springframework.web.filter.CorsFilter@70376c6, org.springframework.security.web.authentication.logout.LogoutFilter@3bc82aa3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@35825d43, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5a4a8a33, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2e89310c, com.kdu.smarthome.filter.JWTAuthFilter@160b7ccd, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@363d3958, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bff4cb9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c521a79, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55c75b72, org.springframework.security.web.access.ExceptionTranslationFilter@808f65, org.springframework.security.web.access.intercept.AuthorizationFilter@2fedf25b]
2024-02-04T12:06:09.898+05:30  INFO 133895 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-04T12:06:09.898+05:30  INFO 133895 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-04T12:06:09.901+05:30  INFO 133895 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2024-02-04T12:06:09.940+05:30  INFO 133895 --- [           main] c.k.smarthome.SmartHomeApplicationTests  : Started SmartHomeApplicationTests in 5.6 seconds (process running for 6.837)
2024-02-04T12:06:10.655+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : Received request to add a new user: UserDTO(id=null, username=user1, password=defaultPassword, role=null, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:10.660+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : password defaultPassword
Hibernate: select next value for users_SEQ
Hibernate: insert into users (email,firstName,lastName,name,password,role,username,id) values (?,?,?,?,?,?,?,?)
2024-02-04T12:06:10.816+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:10.816+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : from request bodyUserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:10.965+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:10.966+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:10.966+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.052+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.052+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.052+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.052+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.118+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : User user1 added successfully
registerUser TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="houseRegisterWithInvalidAuth" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.019">
    <system-out><![CDATA[houseRegisterWithInvalidAuth TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="houseRegisterWithValidRequestData" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.115">
    <system-out><![CDATA[2024-02-04T12:06:11.217+05:30  INFO 133895 --- [           main] c.k.s.controller.HouseControllerTest     : BUILD REQUEST: {"address":"123 Street","house_name":"house1"}
2024-02-04T12:06:11.221+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.303+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.303+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.303+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.303+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.304+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.307+05:30  INFO 133895 --- [           main] c.k.s.controller.HouseController         : HOUSE DTO RECEIVED:HouseDTO(address=123 Street, house_name=house1)
2024-02-04T12:06:11.308+05:30  INFO 133895 --- [           main] com.kdu.smarthome.mapper.HouseMapper     : HOUSEDTO: HouseDTO(address=123 Street, house_name=house1)
Hibernate: select next value for house_SEQ
Hibernate: insert into house (address,houseName,id) values (?,?,?)
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.312+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
Hibernate: select next value for house_user_SEQ
Hibernate: insert into house_user (house_id,house_role,username,id) values (?,?,?,?)
2024-02-04T12:06:11.320+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : HouseUser: HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=123 Street), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)
2024-02-04T12:06:11.320+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : HouseModel: HouseModel(id=1, houseName=house1, address=123 Street)
RESPONSE: {"message":"House added!","house":{"id":1,"houseName":"house1","address":"123 Street"},"httpStatus":"OK"}
houseRegisterWithValidRequestData TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUnregisteredUserToHouseByAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.045">
    <system-out><![CDATA[2024-02-04T12:06:11.335+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.339+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.339+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.339+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.340+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.340+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.344+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Current username: user1
2024-02-04T12:06:11.344+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Username to be added: unregisteredUser
Hibernate: select hu1_0.id,h1_0.id,h1_0.address,h1_0.houseName,hu1_0.house_role,u1_0.id,u1_0.email,u1_0.firstName,u1_0.lastName,u1_0.name,u1_0.password,u1_0.role,u1_0.username from house_user hu1_0 left join house h1_0 on h1_0.id=hu1_0.house_id left join users u1_0 on u1_0.id=hu1_0.username where hu1_0.id=?
2024-02-04T12:06:11.357+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=123 Street), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0
2024-02-04T12:06:11.365+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : [UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)]
2024-02-04T12:06:11.366+05:30 ERROR 133895 --- [           main] com.kdu.smarthome.service.UserService    : Username not foundorg.springframework.security.core.userdetails.UsernameNotFoundException: Username not found
2024-02-04T12:06:11.366+05:30 ERROR 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Something went wrong in house member addition: org.springframework.security.core.userdetails.UsernameNotFoundException: Username not found
addUnregisteredUserToHouseByAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUserToHouseByNonAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.199">
    <system-out><![CDATA[2024-02-04T12:06:11.382+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : Received request to add a new user: UserDTO(id=null, username=user2, password=defaultPassword2, role=null, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.383+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : password defaultPassword2
Hibernate: select next value for users_SEQ
Hibernate: insert into users (email,firstName,lastName,name,password,role,username,id) values (?,?,?,?,?,?,?,?)
2024-02-04T12:06:11.472+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.472+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : from request bodyUserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.474+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.474+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.474+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.557+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.558+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.558+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.558+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : org.springframework.security.core.userdetails.User [Username=user2, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.558+05:30  INFO 133895 --- [           main] c.k.smarthome.controller.AuthController  : User user2 added successfully
registerUser TEST PASSED
2024-02-04T12:06:11.561+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIyIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.oc79zTBOWensdA8MZdEW3XseDeqGQsa2LoUIaPnV_WA
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.565+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.566+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.566+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.566+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user2, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.566+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user2, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.568+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Current username: user2
2024-02-04T12:06:11.569+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Username to be added: user2
Hibernate: select hu1_0.id,h1_0.id,h1_0.address,h1_0.houseName,hu1_0.house_role,u1_0.id,u1_0.email,u1_0.firstName,u1_0.lastName,u1_0.name,u1_0.password,u1_0.role,u1_0.username from house_user hu1_0 left join house h1_0 on h1_0.id=hu1_0.house_id left join users u1_0 on u1_0.id=hu1_0.username where hu1_0.id=?
2024-02-04T12:06:11.572+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=123 Street), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)
2024-02-04T12:06:11.572+05:30 ERROR 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Current user not admin
2024-02-04T12:06:11.572+05:30 ERROR 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Something went wrong in house member addition: java.lang.RuntimeException: User not admin
addUserToHouseByNonAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUserToHouseByAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.032">
    <system-out><![CDATA[2024-02-04T12:06:11.581+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.589+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.589+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.590+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.590+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.590+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.592+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Current username: user1
2024-02-04T12:06:11.592+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Username to be added: user2
Hibernate: select hu1_0.id,h1_0.id,h1_0.address,h1_0.houseName,hu1_0.house_role,u1_0.id,u1_0.email,u1_0.firstName,u1_0.lastName,u1_0.name,u1_0.password,u1_0.role,u1_0.username from house_user hu1_0 left join house h1_0 on h1_0.id=hu1_0.house_id left join users u1_0 on u1_0.id=hu1_0.username where hu1_0.id=?
2024-02-04T12:06:11.595+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=123 Street), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.598+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.599+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
Hibernate: select next value for house_user_SEQ
Hibernate: insert into house_user (house_id,house_role,username,id) values (?,?,?,?)
2024-02-04T12:06:11.603+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : Succcessfully added the new user
addUserToHouseByAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addRoomWithInvalidAuth" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.013">
    <system-out><![CDATA[addRoomWithInvalidAuth TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addRoomByAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.035">
    <system-out><![CDATA[2024-02-04T12:06:11.632+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.638+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.639+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.639+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.639+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.639+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
Hibernate: select hu1_0.id,h1_0.id,h1_0.address,h1_0.houseName,hu1_0.house_role,u1_0.id,u1_0.email,u1_0.firstName,u1_0.lastName,u1_0.name,u1_0.password,u1_0.role,u1_0.username from house_user hu1_0 left join house h1_0 on h1_0.id=hu1_0.house_id left join users u1_0 on u1_0.id=hu1_0.username where hu1_0.id=?
Hibernate: select next value for rooms_SEQ
Hibernate: insert into rooms (house_id,roomName,id) values (?,?,?)
addRoomByAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addRoomForInvalidHouse" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.027">
    <system-out><![CDATA[2024-02-04T12:06:11.673+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.678+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.678+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.678+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.678+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.678+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.685+05:30  WARN 133895 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "invalidHouseId"]
addRoomForInvalidHouse TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="displayAllHouses" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.045">
    <system-out><![CDATA[2024-02-04T12:06:11.696+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.702+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.703+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.703+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.703+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.703+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select hu1_0.id,hu1_0.house_id,hu1_0.house_role,hu1_0.username from house_user hu1_0 join users u1_0 on u1_0.id=hu1_0.username where u1_0.username=?
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.id=?
2024-02-04T12:06:11.722+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : User:user1 houseUserslist: 1
2024-02-04T12:06:11.723+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : house users:[HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=123 Street), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)]
2024-02-04T12:06:11.724+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : [HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=123 Street), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)]
2024-02-04T12:06:11.724+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : [HouseModel(id=1, houseName=house1, address=123 Street)]
displayAllHouses TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="displayAllHousesWithInvalidAuth" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.016">
    <system-out><![CDATA[displayAllHousesWithInvalidAuth TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="displayAllHousesByNonAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.024">
    <system-out><![CDATA[2024-02-04T12:06:11.760+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIyIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.oc79zTBOWensdA8MZdEW3XseDeqGQsa2LoUIaPnV_WA
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.764+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.764+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:11.764+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.764+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user2, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.765+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user2, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select hu1_0.id,hu1_0.house_id,hu1_0.house_role,hu1_0.username from house_user hu1_0 join users u1_0 on u1_0.id=hu1_0.username where u1_0.username=?
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.id=?
2024-02-04T12:06:11.773+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : User:user2 houseUserslist: 1
2024-02-04T12:06:11.773+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : house users:[HouseUser(id=2, house=HouseModel(id=1, houseName=house1, address=123 Street), user=UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null), houseRole=BASIC)]
2024-02-04T12:06:11.775+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : [HouseUser(id=2, house=HouseModel(id=1, houseName=house1, address=123 Street), user=UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null), houseRole=BASIC)]
2024-02-04T12:06:11.775+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : [HouseModel(id=1, houseName=house1, address=123 Street)]
displayAllHousesByNonAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="updateAddressForHouse" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.053">
    <system-out><![CDATA[2024-02-04T12:06:11.789+05:30  INFO 133895 --- [           main] c.k.s.controller.HouseControllerTest     : JSON passed: {"address":"New Street 999"}
2024-02-04T12:06:11.792+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.798+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.798+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.798+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.799+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.799+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
Hibernate: update house set address=?,houseName=? where id=?
2024-02-04T12:06:11.823+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.826+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.826+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.826+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.826+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.826+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select hu1_0.id,hu1_0.house_id,hu1_0.house_role,hu1_0.username from house_user hu1_0 join users u1_0 on u1_0.id=hu1_0.username where u1_0.username=?
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.id=?
2024-02-04T12:06:11.830+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : User:user1 houseUserslist: 1
2024-02-04T12:06:11.831+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : house users:[HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=New Street 999), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)]
2024-02-04T12:06:11.832+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : [HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=New Street 999), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)]
2024-02-04T12:06:11.832+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : [HouseModel(id=1, houseName=house1, address=New Street 999)]
displayAllHouses TEST PASSED
updateAddressForHouse TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="updateAddressForInvalidHouse" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.045">
    <system-out><![CDATA[2024-02-04T12:06:11.843+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.851+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.852+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.852+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.852+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.852+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.856+05:30  WARN 133895 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "invalidHouse"]
2024-02-04T12:06:11.860+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.867+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.867+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.867+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.867+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.867+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select hu1_0.id,hu1_0.house_id,hu1_0.house_role,hu1_0.username from house_user hu1_0 join users u1_0 on u1_0.id=hu1_0.username where u1_0.username=?
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.id=?
2024-02-04T12:06:11.875+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : User:user1 houseUserslist: 1
2024-02-04T12:06:11.876+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : house users:[HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=New Street 999), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)]
2024-02-04T12:06:11.877+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : [HouseUser(id=1, house=HouseModel(id=1, houseName=house1, address=New Street 999), user=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), houseRole=ADMIN)]
2024-02-04T12:06:11.877+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.HouseService   : [HouseModel(id=1, houseName=house1, address=New Street 999)]
displayAllHouses TEST PASSED
updateAddressForInvalidHouse TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addDeviceToInventory" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.056">
    <system-out><![CDATA[2024-02-04T12:06:11.893+05:30  INFO 133895 --- [           main] c.k.s.c.InventoryControllerTest          : {"kickston_id":"111","device_username":"device1","device_password":"pwd","manufacture_date_time":"2024-02-04T12:06:11.890089468","manufacture_factory_place":"BLR"}
2024-02-04T12:06:11.896+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.901+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.901+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.901+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.901+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.901+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.913+05:30  INFO 133895 --- [           main] c.k.s.controller.InventoryController     : DeviceDTO(kickston_id=111, device_username=device1, device_password=pwd, manufacture_date_time=2024-02-04T12:06:11.894316609, manufacture_factory_place=BLR)
2024-02-04T12:06:11.922+05:30  INFO 133895 --- [           main] c.k.smarthome.service.InventoryService   : Device Model: DeviceModel(id=null, kickstonId=111, deviceUsername=device1, devicePassword=pwd, manufactureDateTime=2024-02-04T12:06:11.894316609, manufactureFactoryPlace=BLR)
Hibernate: insert into device (device_password,device_username,kickston_id,manufacture_date_time,manufacture_factory_place,id) values (?,?,?,?,?,default)
addDeviceToInventory TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="displayInventory" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.021">
    <system-out><![CDATA[2024-02-04T12:06:11.947+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.953+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.953+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.953+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.953+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.953+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select dm1_0.id,dm1_0.device_password,dm1_0.device_username,dm1_0.kickston_id,dm1_0.manufacture_date_time,dm1_0.manufacture_factory_place from device dm1_0
displayInventory TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="registerUnavailableDevice" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.033">
    <system-out><![CDATA[2024-02-04T12:06:11.974+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.979+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.979+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:11.979+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:11.979+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:11.979+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:11.988+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
Hibernate: select dm1_0.id,dm1_0.device_password,dm1_0.device_username,dm1_0.kickston_id,dm1_0.manufacture_date_time,dm1_0.manufacture_factory_place from device dm1_0 where dm1_0.kickston_id=?
2024-02-04T12:06:11.993+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : DEVICE REGISTER:DeviceRegisterDTO(kickston_id=111, device_username=device2, device_password=pwd)
2024-02-04T12:06:11.994+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : DEVICE MODEL:DeviceModel(id=1, kickstonId=111, deviceUsername=device1, devicePassword=pwd, manufactureDateTime=2024-02-04T12:06:11.894317, manufactureFactoryPlace=BLR)
2024-02-04T12:06:11.994+05:30 ERROR 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : Device or user not found
registerUnavailableDevice TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="deviceRegisterWithInvalidCredentials" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.024">
    <system-out><![CDATA[2024-02-04T12:06:12.007+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.012+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.012+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.012+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.013+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.013+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.018+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
Hibernate: select dm1_0.id,dm1_0.device_password,dm1_0.device_username,dm1_0.kickston_id,dm1_0.manufacture_date_time,dm1_0.manufacture_factory_place from device dm1_0 where dm1_0.kickston_id=?
2024-02-04T12:06:12.021+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : DEVICE REGISTER:DeviceRegisterDTO(kickston_id=111, device_username=device1, device_password=invalidPassword)
2024-02-04T12:06:12.021+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : DEVICE MODEL:DeviceModel(id=1, kickstonId=111, deviceUsername=device1, devicePassword=pwd, manufactureDateTime=2024-02-04T12:06:11.894317, manufactureFactoryPlace=BLR)
2024-02-04T12:06:12.021+05:30 ERROR 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : Incorrect credentials
deviceRegisterWithInvalidCredentials TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="deviceRegisterByNonAdmin" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.022">
    <system-out><![CDATA[2024-02-04T12:06:12.032+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIyIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.oc79zTBOWensdA8MZdEW3XseDeqGQsa2LoUIaPnV_WA
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.038+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:12.038+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
2024-02-04T12:06:12.038+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.038+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user2, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.038+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user2, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.042+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=2, username=user2, password=$2a$10$0Ok3OEcplw26U7Za44BtGOltKDDEawqWzhmzYltFI7GKUWZd1PbDa, role=ROLE_USER, name=Jin Seok, firstName=Jin, lastName=Seok, email=null)
Hibernate: select dm1_0.id,dm1_0.device_password,dm1_0.device_username,dm1_0.kickston_id,dm1_0.manufacture_date_time,dm1_0.manufacture_factory_place from device dm1_0 where dm1_0.kickston_id=?
2024-02-04T12:06:12.044+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : DEVICE REGISTER:DeviceRegisterDTO(kickston_id=111, device_username=device1, device_password=invalidPassword)
2024-02-04T12:06:12.044+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : DEVICE MODEL:DeviceModel(id=1, kickstonId=111, deviceUsername=device1, devicePassword=pwd, manufactureDateTime=2024-02-04T12:06:11.894317, manufactureFactoryPlace=BLR)
2024-02-04T12:06:12.044+05:30 ERROR 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : Incorrect credentials
deviceRegisterByNonAdmin TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="deviceRegisterWithValidRequestData" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.033">
    <system-out><![CDATA[2024-02-04T12:06:12.057+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.060+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.060+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.060+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.061+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.061+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.064+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
Hibernate: select dm1_0.id,dm1_0.device_password,dm1_0.device_username,dm1_0.kickston_id,dm1_0.manufacture_date_time,dm1_0.manufacture_factory_place from device dm1_0 where dm1_0.kickston_id=?
2024-02-04T12:06:12.067+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : DEVICE REGISTER:DeviceRegisterDTO(kickston_id=111, device_username=device1, device_password=pwd)
2024-02-04T12:06:12.067+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : DEVICE MODEL:DeviceModel(id=1, kickstonId=111, deviceUsername=device1, devicePassword=pwd, manufactureDateTime=2024-02-04T12:06:11.894317, manufactureFactoryPlace=BLR)
Hibernate: insert into registered_device (device_id,user_id,id) values (?,?,default)
deviceRegisterWithValidRequestData TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUnavailableDevice" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.028">
    <system-out><![CDATA[2024-02-04T12:06:12.092+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.095+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.095+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.095+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.095+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.095+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select rd1_0.id,rd1_0.device_id,rd1_0.user_id from registered_device rd1_0 join device dm1_0 on dm1_0.id=rd1_0.device_id where dm1_0.kickston_id=?
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
2024-02-04T12:06:12.104+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : HouseModel: HouseModel(id=1, houseName=house1, address=New Street 999)
Hibernate: select rm1_0.id,rm1_0.house_id,rm1_0.roomName from rooms rm1_0 where rm1_0.id=? and rm1_0.house_id=?
2024-02-04T12:06:12.109+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : RoomModel: RoomModel(id=1, roomName=room1, houseModel=HouseModel(id=1, houseName=house1, address=New Street 999))
addUnavailableDevice TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addDeviceToInvalidHouse" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.014">
    <system-out><![CDATA[2024-02-04T12:06:12.122+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.125+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.125+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.125+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.125+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.125+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
addDeviceToInvalidHouse TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addDeviceToInvalidRoom" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.016">
    <system-out><![CDATA[2024-02-04T12:06:12.140+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.143+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.144+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.144+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.144+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.144+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
addDeviceToInvalidRoom TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addUnregisteredDevice" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.037">
    <system-out><![CDATA[2024-02-04T12:06:12.157+05:30  INFO 133895 --- [           main] c.k.s.c.InventoryControllerTest          : {"kickston_id":"222","device_username":"device2","device_password":"pwd2","manufacture_date_time":"2024-02-04T12:06:12.156046463","manufacture_factory_place":"BLR"}
2024-02-04T12:06:12.159+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.162+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.162+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.162+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.162+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.162+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.163+05:30  INFO 133895 --- [           main] c.k.s.controller.InventoryController     : DeviceDTO(kickston_id=222, device_username=device2, device_password=pwd2, manufacture_date_time=2024-02-04T12:06:12.157403472, manufacture_factory_place=BLR)
2024-02-04T12:06:12.163+05:30  INFO 133895 --- [           main] c.k.smarthome.service.InventoryService   : Device Model: DeviceModel(id=null, kickstonId=222, deviceUsername=device2, devicePassword=pwd2, manufactureDateTime=2024-02-04T12:06:12.157403472, manufactureFactoryPlace=BLR)
Hibernate: insert into device (device_password,device_username,kickston_id,manufacture_date_time,manufacture_factory_place,id) values (?,?,?,?,?,default)
addDeviceToInventory TEST PASSED
2024-02-04T12:06:12.172+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.176+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.176+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.176+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.176+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.176+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select rd1_0.id,rd1_0.device_id,rd1_0.user_id from registered_device rd1_0 join device dm1_0 on dm1_0.id=rd1_0.device_id where dm1_0.kickston_id=?
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
2024-02-04T12:06:12.181+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : HouseModel: HouseModel(id=1, houseName=house1, address=New Street 999)
Hibernate: select rm1_0.id,rm1_0.house_id,rm1_0.roomName from rooms rm1_0 where rm1_0.id=? and rm1_0.house_id=?
2024-02-04T12:06:12.184+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : RoomModel: RoomModel(id=1, roomName=room1, houseModel=HouseModel(id=1, houseName=house1, address=New Street 999))
addUnregisteredDevice TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="addDeviceWithValidRequestData" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.037">
    <system-out><![CDATA[2024-02-04T12:06:12.194+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.203+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.203+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.203+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.203+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.203+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select rd1_0.id,rd1_0.device_id,rd1_0.user_id from registered_device rd1_0 join device dm1_0 on dm1_0.id=rd1_0.device_id where dm1_0.kickston_id=?
Hibernate: select dm1_0.id,dm1_0.device_password,dm1_0.device_username,dm1_0.kickston_id,dm1_0.manufacture_date_time,dm1_0.manufacture_factory_place from device dm1_0 where dm1_0.id=?
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.id=?
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName from house hm1_0 where hm1_0.id=?
2024-02-04T12:06:12.209+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : HouseModel: HouseModel(id=1, houseName=house1, address=New Street 999)
Hibernate: select rm1_0.id,rm1_0.house_id,rm1_0.roomName from rooms rm1_0 where rm1_0.id=? and rm1_0.house_id=?
2024-02-04T12:06:12.211+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : RoomModel: RoomModel(id=1, roomName=room1, houseModel=HouseModel(id=1, houseName=house1, address=New Street 999))
2024-02-04T12:06:12.211+05:30  INFO 133895 --- [           main] c.kdu.smarthome.service.DeviceService    : registered model: RegisteredDevice(id=1, userDTO=UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null), deviceModel=DeviceModel(id=1, kickstonId=111, deviceUsername=device1, devicePassword=pwd, manufactureDateTime=2024-02-04T12:06:11.894317, manufactureFactoryPlace=BLR))
Hibernate: select dm1_0.id,dm1_0.device_password,dm1_0.device_username,dm1_0.kickston_id,dm1_0.manufacture_date_time,dm1_0.manufacture_factory_place from device dm1_0 where dm1_0.kickston_id=?
Hibernate: select hu1_0.id,hu1_0.house_id,hu1_0.house_role,hu1_0.username from house_user hu1_0 join users u1_0 on u1_0.id=hu1_0.username where u1_0.username=? and hu1_0.house_id=?
Hibernate: insert into added_devices (kickston_id,house_id,house_user_id,room_id,id) values (?,?,?,?,default)
addDeviceWithValidRequestData TEST PASSED
]]></system-out>
  </testcase>
  <testcase name="listRoomsAndDevices" classname="com.kdu.smarthome.SmartHomeApplicationTests" time="0.031">
    <system-out><![CDATA[{registeredHouses={user1={houseName=house1, rooms=[{id=1, roomName=room1}], address=New Street 999, id=1, users=[user1, user2], adminUsers=[user1]}}, registeredUsers={user1={userDetails={firstName=John, lastName=Doe, password=defaultPassword, name=John Doe, emailId=john.doe@example.com, username=user1}, token=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg}, user2={userDetails={firstName=Jin, lastName=Seok, password=defaultPassword2, name=Jin Seok, emailId=jin@example.com, username=user2}, token=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIyIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.oc79zTBOWensdA8MZdEW3XseDeqGQsa2LoUIaPnV_WA}}, registeredDevices={111={kickstoneId=111, houseId=1, user=user1, roomId=1, devicePassword=pwd}}, inventory={111={manufactureFactoryPlace=BLR, devicePassword=pwd, kickstoneId=111, manufactureDateTime=2024-02-04T12:06:11.940632146}, 222={manufactureFactoryPlace=BLR, devicePassword=pwd2, kickstoneId=222, manufactureDateTime=2024-02-04T12:06:12.168465388}}}
2024-02-04T12:06:12.233+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJrZHUiLCJzdWIiOiJKV1QgVG9rZW4iLCJ1c2VybmFtZSI6InVzZXIxIiwicm9sZXMiOiJST0xFX1VTRVIiLCJpYXQiOjE3MDcwMjg1NzEsImV4cCI6MTcwNzA1ODU3MX0.Rh5nr5hvVbXo0bTLaKByVGaKiPcVpT98KotZvQJswsg
Hibernate: select ud1_0.id,ud1_0.email,ud1_0.firstName,ud1_0.lastName,ud1_0.name,ud1_0.password,ud1_0.role,ud1_0.username from users ud1_0 where ud1_0.username=?
2024-02-04T12:06:12.238+05:30  INFO 133895 --- [           main] com.kdu.smarthome.service.UserService    : User found by username: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.239+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : user: UserDTO(id=1, username=user1, password=$2a$10$Czp4Kcoq5I8MMs/6vHEsKu5i3bxv7Yuz21Jcl9s5qso/.xA6yvtle, role=ROLE_USER, name=John Doe, firstName=John, lastName=Doe, email=null)
2024-02-04T12:06:12.239+05:30  INFO 133895 --- [           main] c.k.smarthome.config.CustomUserDetails   : false
2024-02-04T12:06:12.239+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : org.springframework.security.core.userdetails.User [Username=user1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
2024-02-04T12:06:12.239+05:30  INFO 133895 --- [           main] com.kdu.smarthome.filter.JWTAuthFilter   : UsernamePasswordAuthenticationToken [Principal=user1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
Hibernate: select hm1_0.id,hm1_0.address,hm1_0.houseName,dm1_0.id,dm1_0.device_password,dm1_0.device_username,dm1_0.kickston_id,dm1_0.manufacture_date_time,dm1_0.manufacture_factory_place,rm1_0.id,rm1_0.house_id,rm1_0.roomName from added_devices adm1_0 join house hm1_0 on hm1_0.id=adm1_0.house_id join device dm1_0 on dm1_0.id=adm1_0.kickston_id join rooms rm1_0 on rm1_0.id=adm1_0.room_id where adm1_0.house_id=?
listRoomsAndDevices TEST PASSED
]]></system-out>
  </testcase>
</testsuite>